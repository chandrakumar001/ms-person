openapi: 3.0.0
info:
  version: 0.0.1
  title: Person
servers:
  - url: /api
paths:
  "/v1/person":
    x-swagger-router-controller: person
    get:
      summary: Get all person for person.
      operationId: queryAllperson
      tags:
        - person details
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person-list-response"
        "400":
          description: invalid request
        "404":
          description: Person not found
    post:
      summary: create a new Person for Person
      tags:
        - Person details
      operationId: createPerson
      requestBody:
        $ref: "#/components/requestBodies/person-bare"
      responses:
        "201":
          description: Person created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person-bare"
        "400":
          description: error, tbd.
  "/v1/Person/{person-id}":
    x-swagger-router-controller: Person
    get:
      summary: get Person by id
      tags:
        - Person details
      operationId: getPerson
      parameters:
        - name: person-id
          in: path
          required: true
          description: ID of the Person
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        "400":
          description: Invalid ID
        "404":
          description: Person not found
    put:
      summary: update an Person
      tags:
        - Person details
      operationId: updatePerson
      parameters:
        - name: person-id
          in: path
          required: true
          description: ID of the Person
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/person-bare"
      responses:
        "202":
          description: Person updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person-bare"
        "400":
          description: error, tbd.
    delete:
      summary: delete Person
      tags:
        - Person details
      operationId: deletePerson
      parameters:
        - name: person-id
          in: path
          required: true
          description: ID of the hardware
          schema:
            type: string
      responses:
        "400":
          description: Invalid ID hardware
        "404":
          description: hardware not found

  /swagger:
    x-swagger-pipe: swagger_raw
components:
  requestBodies:
    person-bare:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/person-bare"
      description: new person
  schemas:
    ###
    ###  hardware object
    ###
    person-bare:
      required: #null
        - emailId
        - age
        - favouriteColour
      type: object
      properties:
        emailId:
          type: string
          example: 'john.k@gmail.com'
          minLength: 1  #length: empty
        personName:
          $ref: "#/components/schemas/person-name"
        age:
          type: string
          example: '18'
          minLength: 1  #length: empty
        favouriteColour:
          type: string
          example: 'red'
          minLength: 1  #length: empty
    person-name:
      required: #null
        - firstName
      type: object
      properties:
        firstName:
          type: string
          example: 'john'
          minLength: 1  #length: empty
        lastName:
          type: string
          example: 'k'

    person-list-response:
      type: object
      properties:
        count:
          type: integer
          example: 15
        persons:
          type: array
          items:
            $ref: "#/components/schemas/person"
    person:
      type: object
      properties:
        personId:
          type: string
          example: e2a40b33-a11a-4938-8111-07acf5758977
          format: uuid
        data:
          $ref: "#/components/schemas/person-bare"